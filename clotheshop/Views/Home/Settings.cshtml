@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> locOptions

 @{
        var currentRequestCulture = Context.Features.Get<IRequestCultureFeature>();
        var cultureItems = locOptions.Value.SupportedUICultures
            .Select(c => new SelectListItem { Value = c.Name, Text = Localizer[c.Name].Value })
            .ToList();
        var responseUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}";
    }

<div title="@Localizer["Request the culture provider:"] @currentRequestCulture?.Provider?.GetType().Name">
    <form id="selectLanguage" asp-controller="Home" 
          asp-action="SetAppLanguage" asp-route-returnUrl="@responseUrl" 
          method="post" class="form-horizontal" role="form">
        <label asp-for="@currentRequestCulture.RequestCulture.UICulture.Name">@Localizer["Select Language:"]</label> 
        <select name="culture"
          onchange="this.form.submit();"
          asp-for="@currentRequestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems">
        </select>
    </form>
</div>
